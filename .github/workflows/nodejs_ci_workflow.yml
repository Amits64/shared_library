name: "CI Workflow"
on:
  workflow_dispatch:
    inputs:
      sonar_token:
        description: "SonarCloud authentication token"
        required: true
      sonar_organization:
        description: "SonarCloud organization"
        required: true
      sonar_host_url:
        description: "SonarQube host URL"
        required: true
      github_token:
        description: "GitHub token"
        required: true
      dockerhub_username:
        description: "Docker Hub username"
        required: true
      dockerhub_password:
        description: "Docker Hub password"
        required: true
      registry:
        description: "Docker Image name"
        required: true
      image:
        description: "Docker Image name"
        required: true

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Java 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ inputs.github_token }}
          SONAR_TOKEN: ${{ inputs.sonar_token }}
          SONAR_ORGANIZATION: ${{ inputs.sonar_organization }}

      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        env:
          SONAR_TOKEN: ${{ inputs.sonar_token }}
          SONAR_HOST_URL: ${{ inputs.sonar_host_url }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ inputs.dockerhub_username }}
          password: ${{ inputs.dockerhub_password }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ inputs.registry }}/${{ inputs.image }}:v${{ github.run_number }}
